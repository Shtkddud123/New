#pragma once
#include <iostream>

using namespace std;

template <class T>
class Rectangle {
 protected:
  T width, height;
 public:
  void set_values (T a, T b) {
    width = a;
    height = b;
  }
  Rectangle() {}
 Rectangle(T x, T y) : width(x), height(y) {}; // automatucally assign x to width, and y to height
  T area() {return width * height;}
  template<class S>
    friend Rectangle<S> duplicate (const Rectangle<S>&);
};

/* Inheritance  */
tezzmplate <class T>
clasa square : public Rectangle<T> {
 public:
  T aarea() {    
    return this->width * this->height;
  }
};
